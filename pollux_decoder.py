# Pollux cipher Morse code decoder

MORSE_CODE_DICT = {
    'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.',
    'F': '..-.', 'G': '--.', 'H': '....', 'I': '..', 'J': '.---',
    'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---',
    'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-',
    'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-', 'Y': '-.--',
    'Z': '--..',
    '0': '-----', '1': '.----', '2': '..---', '3': '...--', '4': '....-',
    '5': '.....', '6': '-....', '7': '--...', '8': '---..', '9': '----.',
    '.': '.-.-.-', ',': '--..--', '?': '..--..', "'": '.----.', '!': '-.-.--',
    '/': '-..-.', '(': '-.--.', ')': '-.--.-', '&': '.-...', ':': '---...',
    ';': '-.-.-.', '=': '-...-', '+': '.-.-.', '-': '-....-', '_': '..--.-',
    '"': '.-..-.', '$': '...-..-', '@': '.--.-.', ' ': '/'
}

# Reverse Morse code dictionary
MORSE_CODE_DICT_REVERSE = {v: k for k, v in MORSE_CODE_DICT.items()}

# Pollux mapping
POLLUX_MAP = {'.': 'A', '-': 'B', ' ': 'C'}
REVERSE_POLLUX_MAP = {'A': '.', 'B': '-', 'C': ' '}

def pollux_to_morse(pollux_cipher):
    # Convert Pollux cipher (A/B/C) to Morse code (./-/ )
    return ''.join(REVERSE_POLLUX_MAP.get(ch, '') for ch in pollux_cipher)

def morse_to_text(morse):
    # Split Morse code into words and letters
    words = morse.strip().split(' / ')
    decoded_words = []
    for word in words:
        letters = word.split()
        decoded_letters = [MORSE_CODE_DICT_REVERSE.get(letter, '?') for letter in letters]
        decoded_words.append(''.join(decoded_letters))
    return ' '.join(decoded_words)

if __name__ == "__main__":
    # Paste your Pollux cipher here
    pollux_cipher = '''AAABBCBAAABCAABCCCCCBAAAACCBABACCCAABCBBBBBCBBBBBCBBBBBCAABACCCCCAABCBBBBBCBBBBBCABBBBCBAAACBACCCAABCCCBBBCBBCCBABBCABBCABAACCBABACCCAABCBBBBBCBBBBBCABBBBCBBAAACCCCBBABCBBAACCCBBAACCCCAABCBBBBBCBBBBBCAAAAACBABACCCAABCBBBBBCBBBBBCABBBBCBBAACCBBACCBBAACABABABCCAAACAAABCCCAAAAACCAABCBBBBBCBBBBBCABBBBCAABACBABABACCCCCABBBBACCCCAABCBBBBBCBBBBBCABBBBCACBABBCCABABABCCCCCCBAABCCCBCCCCAAABBCBAABACAAABCCCCABACCAABACCBABACBBAACABAACBBAACABBBCCAAABCAABACCAABACCCBBBCCAABCBBBBBCBBBBBCABBBBCBBAAACBBAAACAACCBBACCBCCCBAAABCCCCAABCBBBBBCBBBBBCABBBBCBBAAACCCCABABACCBAAABCCBBABCCAAABCCAABCBBBBBCBBBBBCAAAAACBABACBBACCAACBBACABBBBACCABABACCBBACACCCCCAABCBBBBBCBBBBBCABBBBCACCCCCCBAABCCCCCCCCCCABABABCCCAABCBBBBBCBBBBBCABBBBCBAAACBACCCCCAAABCCACCCBABBCCCCCCAABCBBBBBCBBBBBCABBBBCBAACCCCCAABCBBBBBCBBBBBCABBBBCACCCAAABCABBBBACCCCAAABCBCBACBAAAACCCCABAACCBBBAAACCABAACABBBBACCABBBCCABAACBBBCAABACCBBAAACCBABCCABBCCCAABCBBBBBCBBBBBCABBBBCAABACAAACCCABBBBACCCAABCBBBBBCBBBBBCABBBBCACCAABCBBBBBCBBBBBCABBBBCAABACCCCAABCBBBBBCBBBBBCABBBBCBAAACCCAABCBBBBBCBBBBBCABBBBCBAAACBACCBAABCBABABACCCCCBBACAABCCCCCBABACCCCCCCCBABCCCCCAABCBBBBBCBBBBBCABBBBCBAAACBABABACBBBBACCCCBABCCCAABCBBBBBCBBBBBCABBBBCACCCBABABACABABABCCCABBCCCCCCCCBAABCAAACCAABCBBBBBCBBBBBCAAAAACBABACCCAABCBBBBBCBBBBBCAAAAACBABACCCAABCCCAACBBCBACCCAABCBBBBBCBBBBBCABBBBCAABACBAAAACCCAABCBBBBBCBBBBBCAAAAACBABACCAAABCCCCCCCBABCBABACBBCCAABCBBBBBCBBBBBCAAAAACBABACCCCAACAAABCCAABCBBBBBCBBBBBCABBBBCBAACCAABCBBBCBABCCABABABCCBAABCBBCBAAAACAAABCAABACCACBACCAAABCBBCCABABABCBBBCAAACBABCAAACBBBAAACAAACBBCCCCAABCBBBBBCBBBBBCABBBBCAABACCBABABACCBABABACCAABCBBBBBCBBBBBCABBBBCACCBBABCBABABACBAAAACBBAAACBBCBABBCABBBCCAAABCCBABACBBAACCCBBCCCCCCBBBCABABACCBCBBCAAABBCCCCCBBACBACBBBBACBABBCCCBBAACBABABACCAABCBBBBBCBBBBBCABBBBCACCCCCCCCCCAABCBBBBBCBBBBBCABBBBCACCBABBCBAABACBBACCCCCAABCBBBBBCBBBBBCABBBBCBAAACBABBCCBBAACCCBACCBAABCCCAABCBBBBBCBBBBBCAAAAACBABACCAABCCBBCCAABCBBBBBCBBBBBCABBBBCACCAAABCCCBAAAACBBAAACABABABCBBAACCABACCBABACCABAACCCCCBACCCABABABCCAABACCBBBBACCCCABAACCCCCBBACCCAABCBBBBBCBBBBBCABBBBCBBAAACCAACAAACCCCCBCCCBAABACCABAACBBAAACBBBAAACCCCAAAAACCABAACCCAAABBCCCCAAACBACBBACCCBBBAAACCCBABABACCABBBCCBAAAABCCABBCBBACBACCCABBCAAAAACAABCAAACCCBBCBBAACCBBCCAAABBCCAAACCCAAABCABABACBBCCCAAABCAABCCABACCBAABCCBABBCCBBCABBCCBABACCAAABBCCCCCCABABACCCAABCBBBBBCBBBBBCABBBBCBAAACBBCBBAACCCCAABCBBBBBCBBBBBCABBBBCBAACCCBABACCBBBBACCCAAABCCCABBCCCBABBCCBBBAAACCBBABCCAACBBACCCAABCBBBBBCBBBBBCAAAAACBABACCCCBBAACBBACAAACCBACCCBACCBAAABCBBABCCCCCBAAAACCCCAABCBBBBBCBBBBBCABBBBCBBAAACCBABCCCCCAABCBBBBBCBBBBBCABBBBCBAACCCABBCAAACAAACBBBAAACCABBBCAAABCCCABBBCCBBBAAACCBBACCAAACCCCCAABCBBBBBCBBBBBCAAAAACBABACCCCAABCBBBBBCBBBBBCABBBBCBAAACCCCCAABCBBBBBCBBBBBCBBBBBCAABACCABACCAAACCCBABBCBBABCCCAABCBBBBBCBBBBBCABBBBCBAACCCBABBCCCABABACCCABBBCCBABBCAAACCCCBABABACCCBBAACCBBAACABACCAAABCBAABACCCBACAAABCBBCCCAACCABABABCCCBABABACBBBAAACCBAAAACCCCBAAAABCCCCCABBCCCCBABBCBBBAAACBACAAABCCCCAABCBBBBBCBBBBBCBBBBBCAABACCBABACCAAAAACCCCAABCBBBBBCBBBBBCABBBBCAABACBAAAABCCBABBCBAAABCBABCCBBACCBAAAABCCCCAABCBACCCCCCCABACCCCABABABCABBCAAAAACCBBCCCCCCCAABACCCBBAAACCCBBCCBBBBACCCAABCBBBBBCBBBBBCBBBBBCAABACCCCCCACCCCABACBABABACCCAAABCCAAACCBCCAAAAACBBAACBACCBBBAAACBBAAACBBCBACBBABCCAABCBBBBBCBBBBBCABBBBCAABACBAAAACCCCCBABCCBAABCCCCABABACCBACCCCCBABACCCCCCBABBCBABCCBACCBAABCBABABACCCCCBABCCCCAABCBBBBBCBBBBBCABBBBCACCCCCBAAAABCCCABACCAAACCCAABCBBBBBCBBBBBCABBBBCAABACABBBBACCCCBBBAAACBBCCCCCCCCCCCCCABACCAAABBCCCCBAABCCCCCBAABACCCCCAAABCCCBAABACBBCAABCABABACCCCCBABBCABBBCCBABCCAABACBACCCCAABCBBBBBCBBBBBCABBBBCACCBCCAABCBBBBBCBBBBBCABBBBCAABACABAACBABCCBABCBBAACBACCCBCCCCABBBCCCCAAABCAABCCAABCCCCCCCCCCBBCCCCCCBBABCCCCABABACCCCBBACCAABCBBBBBCBBBBBCBBBBBCAABACCCCCAABCBBBBBCBBBBBCABBBBCBAAACCAABCBBBBBCBBBBBCABBBBCBAAACCBAABCAAABCCBBACCBBBCBAABCCCCAABCBBBBBCBBBBBCABBBBCAABACCCBBCCCCBBAACCBAABACCCCCBBCCAABCCBABBCCAAAAACCBAAAACCBAABCCCCAABCBBBBBCBBBBBCABBBBCACCCCCCBBAACBBACBAABACCCABACABBCCCCAABCBBBBBCBBBBBCAAAAACBABACCCCCBACBAAAABCCCCBBCCCBAABACCCBCCABACCCCAABCBBBBBCBBBBBCABBBBCAABACCCCCCAABCBBBBBCBBBBBCABBBBCAABACCAACCCCCCCCCCBACCBBCCAAABBCAAACAAABBCCABBBCCCCCCAABCBBBBBCBBBBBCABBBBCBAAACAABCCCCBBBCBBAACCBBAAACCCCAABACCCAABCBBBBBCBBBBBCABBBBCBAAACCCAABCBBBBBCBBBBBCABBBBCBAAACCAAABBCBBACABABABCCCABABABCCACAABCACCCCBBACCAABCBBBBBCBBBBBCABBBBCBAACCCCABBBCABBCCBBAAACABACBABBCBAAAABCCCBAABACCCABABACCCCAABCBBBBBCBBBBBCABBBBCAABACCAABACCCCAAACCCCCCCACCABBCABBBCBBBCCBBBCCCBBAAACCCCBAAAACCCCCBAAAACAAACBABABACCCBBACCCCBBCCBABCCBBAACCCCAABCBBBBBCBBBBBCABBBBCACCBBACCAABCCAABCBBBBBCBBBBBCABBBBCAABACCCABACAAABCCAAABCBBABCCAAABCCBBBBACBACBACCCCAABCBBBBBCBBBBBCABBBBCAABACCCAABCBBBBBCBBBBBCABBBBCAABACBABCCCCCCAABCBBBBBCBBBBBCABBBBCACCCBAABACBABCABBCBBBBACCABBBCCAABCBAAAACCCCAABCBBBBBCBBBBBCABBBBCAABACCAABCBBBBBCBBBBBCABBBBCACCBBACBABABACCCAACCCAABCBBBBBCBBBBBCABBBBCACCCAAABCCCCBAAABCCAAABBCCAAABBCBABCBCBABBCBCCBABCCCBCCCAABCBBBBBCBBBBBCBBBBBCAABACCBBBAAACCBAAAABCCCCAABACCBABBCAAABCCCBBBCBACBBBCBAAAABCCAABCCCCAAABBCCCCCBACCCC'''
    morse = pollux_to_morse(pollux_cipher)
    print('Morse:', morse[:200] + '...')  # Print a preview
    print('\nDecoded:')
    print(morse_to_text(morse))
